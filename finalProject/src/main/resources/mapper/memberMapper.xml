<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

   <!-- 암호화 후 로그인  -->
   <select id="selectOne" parameterType="Member" resultType="Member"
      resultMap="MemberResultSet">
		select m.*, r.*
		from member m
		join user_rank r on(m.rank_code = r.rank_code)
		where user_id=#{user_id} and 
        status = 'N'
   </select>
   
   

   <insert id="insertMember" parameterType="Member">
      insert into member
      values(#{user_id}, default,#{user_pwd}, #{nickName},#{user_name},
            #{phone},#{user_residentNumber},#{user_email}, #{address},
                sysdate,sysdate,default,default,default,sysdate,default)
   </insert>

   <select id="idCheck" parameterType="string" resultType="_int">
      select count(*)
      from member
      where user_id=#{user_id}
   </select>


   <!-- 아이디 찾기 -->  
   <select id="searchId" parameterType="String" resultType="String">
      select user_id 
        from member 
         where user_name= #{user_name}
          and phone= #{phone}
   </select>


   <!-- <select id="getPw" parameterType="java.util.Map" resultType="java.lang.String">
      select user_pwd
       from Member
        where user_id = #{user_id}
           and user_email = #{user_email}
   </select> -->

	<update id="updateMember" parameterType="Member">
		update member 
		set nickname = #{nickName}, phone=#{phone}, user_email=#{user_email}, address=#{address}
		where user_id=#{user_id}
	</update>

	<update id="updatePwd" parameterType="Member">
		update member
		set user_pwd = #{user_pwd}
		where user_id=#{user_id}
	</update>
	
	<update id="deleteMember" parameterType="Member">
		update member
		set status='Y'
		where user_id=#{user_id}
	</update>

	<select id="getMyPostListCount" parameterType="map" resultType="_int">
		select count(*)
		from gesipan 
		where g_writer = #{user_id}
		and g_category = #{category}
		and g_status='N'
	</select>
	
	<select id="selectMyPost" parameterType="map" resultType="Gesipan">
		select g.*, m.nickname
		from gesipan g
		join member m on(g.g_writer = m.user_id)
		where g_writer = #{user_id} and g_category = #{category} and g_status='N'
		order by g_type desc, g_ref desc, g_order asc
	</select>

	<select id="getMemberListCount" resultType="_int">
		select count(*)
		from member
	</select>
	
	<select id="getMembers" resultMap="MemberResultSet">
		select m.*, r.*
		from member m
		join user_rank r on(m.rank_code = r.rank_code)
		where m.status='N' and user_id != 'admin'
		order by user_id asc
	</select>
	
	<resultMap type="Member" id="MemberResultSet">
		<id property="user_id" column="user_id"/>
		<result property="rank_code" column="rank_code"/>
		<result property="user_pwd" column="user_pwd"/>
		<result property="nickName" column="nickname"/>
		<result property="user_name" column="user_name"/>
		<result property="phone" column="phone"/>
		<result property="user_residentNumber" column="user_residentNumber"/>
		<result property="user_email" column="user_email"/>
		<result property="address" column="address"/>
		<result property="enroll_date" column="enroll_date"/>
		<result property="update_date" column="update_date"/>
		<result property="bookmark" column="bookmark"/>
		<result property="status" column="status"/>
		<result property="penalty_point" column="penalty_point"/>
		<result property="penalty_date" column="penalty_date"/>
		<result property="penalty_stack" column="penalty_stack"/>
		<association property="rankCode" javaType="RankCode">
			<result property = "rank_code" column="rank_code"/>
			<result property = "rank_name" column="rank_name"/>
			<result property = "rank_ename" column="rank_ename"/>
			<result property = "rank_img" column="rank_img"/>
		</association>
	</resultMap>
	
	<update id="updateRankCode" parameterType="Member">
		update member
		set rank_code = #{rank_code}
		where user_id = #{user_id}
	</update>
	
	<update id="deleteAllMember" parameterType="string">
		update member
		set status = 'Y'
		<trim prefix="where" prefixOverrides="and|or">
			user_id in
			<foreach collection="array" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</trim>
	</update>
	
	<select id="selectSearchMemberListCount" resultType="_int" parameterType="map">	
		select count(*)
		from member
		where status='N'
		<choose>
			<when test="searchfor.equals('user_id')">
				and user_id = #{ keyword }
			</when>
			<when test="searchfor.equals('user_name')">
				and user_name like '%' || #{ keyword } || '%'
			</when>
		</choose>
	</select>
	
	<select id="selectSearchMemberList" resultMap="MemberResultSet">
		select m.*, r.*
		from member m
		join user_rank r on(m.rank_code = r.rank_code)
		where status='N'
		<choose>
			<when test="searchfor.equals('user_id')">
				and user_id = #{ keyword }
			</when>
			<when test="searchfor.equals('user_name')">
				and user_name like '%' || #{ keyword } || '%'
			</when>
		</choose>
	</select>



</mapper>